name: Publish Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.2.3

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Publish app
        run: |
          dotnet publish Databox.csproj -c Release -o out

      - name: Zip output
        run: |
          cd out
          zip -r ../release_${{ github.ref_name }}.zip .

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          artifacts: release_${{ github.ref_name }}.zip
          body: |
            Automated release of version ${{ github.ref_name }}

      - name: Build image
        run: |
          IMAGE_NAME=${{ github.repository }}
          docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_NAME=${{ github.repository }}
          IMAGE_ID=ghcr.io/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
